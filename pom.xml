<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>autoquality-playground</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>autoquality-playground</name>
    <description>autoquality-playground</description>
    <properties>
        <java.version>21</java.version>
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
        <testcontainers.version>1.16.0</testcontainers.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.1.Final</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.wimdeblauwe</groupId>
            <artifactId>error-handling-spring-boot-starter</artifactId>
            <version>1.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.gavlyukovskiy</groupId>
            <artifactId>datasource-proxy-spring-boot-starter</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>es.torres</groupId>
            <artifactId>archunit-rules</artifactId>
            <version>0.0.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- depending on your project -->
                    <!-- depending on your project -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <!-- other annotation processors -->
                    </annotationProcessorPaths>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dspring.application.admin.enabled=true</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <apiDocsUrl>http://localhost:8080/v3/api-docs.yaml</apiDocsUrl>
                    <outputFileName>api-docs.yaml</outputFileName>
                    <outputDir>${project.basedir}/api-docs</outputDir>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>5.3.0</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatorName>html2</generatorName>
                            <inputSpec>${project.basedir}/api-docs/api-docs.yaml</inputSpec>
                            <output>${project.basedir}/api-docs/</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>copy-file</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>rename</goal>
                        </goals>
                        <configuration>
                            <sourceFile>api-docs/index.html</sourceFile>
                            <destinationFile>api-docs/api-docs.html</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>zally</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.ethlo.zally</groupId>
                        <artifactId>zally-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <configuration>
                            <!--Configure severities that fail the build. Default is MUST, SHOULD -->
                            <!--              <failOn>MUST</failOn>-->
                            <!-- The input file to validate -->
                            <source>api-docs/api-docs.yaml</source>
                            <!--Ignore certain rules. Default is none -->
                            <skipRules>
                                <!--                <skipRule>CommonFieldTypesRule</skipRule>-->
                                <!--                <skipRule>SecureAllEndpointsWithScopesRule</skipRule>-->
                                <skipRule>PluralizeResourceNamesRule</skipRule>
                                <skipRule>PrefixPathRule</skipRule>
                            </skipRules>
                            <ruleConfigs>
                                <!-- NOTE: The rule elements' content can be written in JSON or YAML -->
                                <PluralizeResourceNamesRule>
                                    whitelist:
                                    - current
                                    - self
                                </PluralizeResourceNamesRule>
                            </ruleConfigs>
                            <!-- Alternatively rules can be configured with configuration file -->
                            <!--              <rulesConfigLocation>src/main/resources/boat.conf</rulesConfigLocation>-->
                            <!-- Write the result of the validation to file. Optional-->
                            <resultFile>target/api_validation_result.yaml</resultFile>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>report</goal>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <!-- The pluggable rule-set you want to run -->
                            <dependency>
                                <groupId>es.torres</groupId>
                                <artifactId>zally-openapi-lint-rules</artifactId>
                                <version>0.0.1</version>
                            </dependency>
                            <!--              <dependency>-->
                            <!--                <groupId>org.zalando</groupId>-->
                            <!--                <artifactId>zally-ruleset-zalando</artifactId>-->
                            <!--                <version>2.1.0</version>-->
                            <!--              </dependency>-->
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>archunit</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.societegenerale.commons</groupId>
                        <artifactId>arch-unit-maven-plugin</artifactId>
                        <version>4.0.2</version>
                        <configuration>

                            <!-- optional - you can avoid build fail if there is issue. True to avoid build failure, default is false -->
                            <noFailOnError>true</noFailOnError>

                            <!-- optional - you can exclude classes that have a path containing any of the mentioned paths -->
                            <excludedPaths>
                                <excludedPath>generated-sources</excludedPath>
                            </excludedPaths>

                            <rules>
                                <!-- using a rule available out of the box... -->
                                <preConfiguredRules>
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoStandardStreamRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoJunitAssertRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoJodaTimeRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoJavaUtilDateRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoPowerMockRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoPrefixForInterfacesRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoPublicFieldRuleTest</rule>-->

                                    <!-- you may want to use one of the below rules, but not both at same time -->
                                    <!--                                <rule>com.societegenerale.commons.plugin.rules.NoTestIgnoreRuleTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoTestIgnoreWithoutCommentRuleTest</rule>-->

                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoInjectedFieldTest</rule>-->
                                    <!--                  <rule>com.societegenerale.commons.plugin.rules.NoAutowiredFieldTest</rule>-->
                                </preConfiguredRules>
                                <!-- ... and a custom one, coming from a dependency of the plugin -->
                                <configurableRules>
                                    <configurableRule>
                                        <rule>com.kalyp.buildingblocks.archunit.ArchitectureRules</rule>
                                    </configurableRule>
                                    <!--                                <configurableRule>-->
                                    <!--                                    <rule>com.tngtech.archunit.library.GeneralCodingRules</rule>-->
                                    <!--                                    <applyOn>-->
                                    <!--                                        <packageName>es.torres</packageName>-->
                                    <!--                                        &lt;!&ndash; scope can be "main" or "test" &ndash;&gt;-->
                                    <!--                                        <scope>main</scope>-->
                                    <!--                                    </applyOn>-->

                                    <!--                                    <checks>-->
                                    <!--                                        &lt;!&ndash; otherwise you can specify either field or method names here. If no checks block is defined, all are executed &ndash;&gt;-->
                                    <!--                                        <check>NO_CLASSES_SHOULD_ACCESS_STANDARD_STREAMS</check>-->
                                    <!--                                    </checks>-->
                                    <!--                                </configurableRule>-->
                                </configurableRules>
                            </rules>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>arch-test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <!-- dependency contains com.mycompany.rules.CustomArchRule -->
                                <groupId>es.torres</groupId>
                                <artifactId>archunit-rules</artifactId>
                                <version>0.0.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>error-prone-warn</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <release>21</release>
                            <encoding>UTF-8</encoding>
                            <compilerArgs>
                                <arg>-XDcompilePolicy=simple</arg>
                                <arg>-Xplugin:ErrorProne
                                    -XepAllErrorsAsWarnings
                                </arg>
                            </compilerArgs>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>2.26.1</version>
                                </path>
                                <path>
                                    <groupId>es.torres.error-prone-support</groupId>
                                    <artifactId>error-prone-contrib</artifactId>
                                    <version>0.0.1</version>
                                </path>
                            </annotationProcessorPaths>
                            <showWarnings>true</showWarnings>
                            <!-- <failOnWarning>true</failOnWarning> -->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>error-prone</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <release>21</release>
                            <encoding>UTF-8</encoding>
                            <compilerArgs>
                                <!-- Enable and configure Error Prone. -->
                                <arg>-XDcompilePolicy=simple</arg>
                                <arg>
                                    -Xplugin:ErrorProne
<!--                                    -XepDisableAllChecks-->
<!--                                    -Xep:Unused:WARN-->
                                    <!-- We use a separate Maven profile to
                                    raise all warnings as errors. This way one
                                    can optionally collect all warnings without
                                    failing the build on the first error
                                    encountered. -->
                                    <!--                  -XepDisableWarningsInGeneratedCode-->
                                    <!--                  -XepAllErrorsAsWarnings-->
                                    <!-- -XepAllSuggestionsAsWarnings-->
                                    <!-- We want to enable almost all Error
                                    Prone bug pattern checkers, so we enable
                                    all and then selectively deactivate some. -->
                                    <!--                  -XepAllDisabledChecksAsWarnings-->
                                    <!-- Some generated classes violate Error
                                    Prone bug patterns. We cannot in all cases
                                    avoid that, so we simply tell Error Prone
                                    not to warn about generated code. -->
                                    <!--                  -XepDisableWarningsInGeneratedCode-->
                                    -XepExcludedPaths:.*/target/generated-sources/.*
                                    <!--                  -XepExcludedPaths:\Q${project.build.directory}${file.separator}\E.*-->
                                    <!--                  &lt;!&ndash; We don't target Android. &ndash;&gt;-->
                                    <!--                  -Xep:AndroidJdkLibsChecker:OFF-->
                                    <!--                  &lt;!&ndash; We don't target JDK 7. &ndash;&gt;-->
                                    <!--                  -Xep:Java7ApiChecker:OFF-->
                                    <!--                  &lt;!&ndash; We don't target JDK 8. &ndash;&gt;-->
                                    <!--                  -Xep:Java8ApiChecker:OFF-->
                                    <!--                  &lt;!&ndash; We generally discourage `var` use. &ndash;&gt;-->
                                    <!--                  -Xep:Varifier:OFF-->
                                    <!--                  &lt;!&ndash; Disabled for demo purposes. &ndash;&gt;-->
                                    <!--                  -Xep:SystemOut:OFF-->
                                    <!-- Refaster name pattern example:
                                    -XepOpt:Refaster:NamePattern=^(?!(Immutable.*Rules)).*
                                    -->
                                    <!--
                                    START Error Prone Support configuration.
                                    -->
                                    <!-- XXX: Enable once sufficiently
                                    configurable. -->
                                    <!--                  -Xep:LexicographicalAnnotationListing:OFF-->
                                    <!-- XXX: Enable once false positives no longer
                                    have a major performance impact. -->
                                    <!--                  -Xep:MethodReferenceUsage:OFF-->
                                    <!-- XXX: Disabled as it is not a clear
                                    improvement. -->
                                    <!--                  -Xep:StringJoin:OFF-->
                                    <!--                  -XepOpt:ErrorProneSupport:IgnoreClasspathCompat=true-->
                                    <!--
                                    END Error Prone Support configuration.
                                    -->
                                    <!-- Append additional custom arguments. -->
                                    ${error-prone.patch-args}
                                </arg>
                            </compilerArgs>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>com.google.errorprone</groupId>
                                    <artifactId>error_prone_core</artifactId>
                                    <version>2.26.1</version>
                                </path>
                                <path>
                                    <groupId>es.torres.error-prone-support</groupId>
                                    <artifactId>error-prone-contrib</artifactId>
                                    <version>0.0.1</version>
                                </path>
                            </annotationProcessorPaths>
                            <showWarnings>true</showWarnings>
                            <!-- <failOnWarning>true</failOnWarning> -->
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- If combined with the `error-prone` profile above, this profile
            configures Error Prone to try and automatically fix (rather than
            merely flag) bug pattern violations in the source code. -->
            <id>patch</id>
            <properties>
                <error-prone.patch-args>-XepPatchChecks:${error-prone.patch-checks} -XepPatchLocation:IN_PLACE
                </error-prone.patch-args>
                <!-- One can override this value to specify which checks should be patched. -->
                <error-prone.patch-checks/>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>
</project>
